<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mémo de Yin </title>
    <link>https://hrbhot.github.io/</link>
    <description>Recent content on Mémo de Yin </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Wed, 29 Jul 2020 17:16:39 +0200</lastBuildDate>
    
	<atom:link href="https://hrbhot.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac_python_降级</title>
      <link>https://hrbhot.github.io/posts/mac_python_%E9%99%8D%E7%BA%A7/</link>
      <pubDate>Wed, 29 Jul 2020 17:16:39 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/mac_python_%E9%99%8D%E7%BA%A7/</guid>
      <description>给homebrew升级的时候，没注意把python也升级到了3.8，需要降级到3.7。 首先 brew switch python 3.7.6_1 ,提示需要 解绑python3.8 运行 brew unlink python@3.8 再次运行 brew switch python 3.7.6_1 已经回到了3.7.6</description>
    </item>
    
    <item>
      <title>Odoo_to Do_list小记</title>
      <link>https://hrbhot.github.io/posts/odoo_to-do_list%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Wed, 29 Jul 2020 01:08:29 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/odoo_to-do_list%E5%B0%8F%E8%AE%B0/</guid>
      <description>odoo to-do list 小记
应用逻辑 - 数据层 model / postgreSQL database ORM - 逻辑层 controle / logic 实现CRUD - 展示层 view - 安全组 Users / Manager  Todo-list  数据层 model Settings -&amp;gt; Technical -&amp;gt; Database structure -&amp;gt; Models -&amp;gt; res.partner add a line: Field Name: x_is_work_team Field Label: Is Work Team? Filed Type: boolean
 视图 res.partner -&amp;gt; views , windows action 可以指定要用的base视图 views type: Form Tree(list) Search Kanban</description>
    </item>
    
    <item>
      <title>Docker安装RabbitMQ</title>
      <link>https://hrbhot.github.io/posts/docker%E5%AE%89%E8%A3%85rabbitmq/</link>
      <pubDate>Wed, 10 Jun 2020 00:16:55 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/docker%E5%AE%89%E8%A3%85rabbitmq/</guid>
      <description>docker 一键启动
docker run -d &amp;ndash;restart always &amp;ndash;name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
端口 5672 为RabbitMQ服务器监听的 TCP 端口
127.0.0.1:15672 为RabbitMQ管理工具监听的http端口 ，通过这个地址访问管理rabbitMQ 默认用户名 guest 密码 guest</description>
    </item>
    
    <item>
      <title>命令行下载b站视频</title>
      <link>https://hrbhot.github.io/posts/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8B%E8%BD%BDb%E7%AB%99%E8%A7%86%E9%A2%91/</link>
      <pubDate>Sun, 07 Jun 2020 12:28:23 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8B%E8%BD%BDb%E7%AB%99%E8%A7%86%E9%A2%91/</guid>
      <description>看b站有时候很卡，使用annie这个工具把视频下载到本地观看，和youtuble-dl差不多。
 下载安装包
wget https://github.com/iawia002/annie/releases/download/0.10.1/annie_0.10.1_Linux_64-bit.tar.gz  或者curl命令 下载
curl -LO https://github.com/iawia002/annie/releases/download/0.10.1/annie_0.10.1_Linux_64-bit.tar.gz  解压缩,并删除安装文件
tar zxvf *.gz rm *.gz  运行 下载高清的视频 可以先用 annie -i b站链接地址 ，查看支撑的清晰度，80 是1080P
  ./annie -f 80 b站链接地址
如果下载很多视频 可以把视频放在一个link.txt文件中。使用下面命令下载
./annie -f 80 -F link.txt
 如果多视频下载做个简单的后台运行脚本 down_b_video.sh
nohup ./annie -f 80 -F link.txt &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;   </description>
    </item>
    
    <item>
      <title>ITerm2脚本登陆ssh</title>
      <link>https://hrbhot.github.io/posts/iterm2%E8%84%9A%E6%9C%AC%E7%99%BB%E9%99%86ssh/</link>
      <pubDate>Wed, 13 May 2020 14:52:30 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/iterm2%E8%84%9A%E6%9C%AC%E7%99%BB%E9%99%86ssh/</guid>
      <description>ITerm2 设置脚本 免输入登陆SSH
Profiles =&amp;gt; Open profiles =&amp;gt; Edit profiles =&amp;gt; Tags + =&amp;gt; Command位置 =&amp;gt; expect Path/脚本文件名
带证书 SSH脚本 #!/usr/bin/expect -f set user root #用户名 set host YouHostIP #主机IP set empath YouPATH/host.pem #证书存放位置 set timeout -1 spawn ssh -i $empath $user@$host interact expect eof  免密码 SSH脚本 #!/usr/bin/expect -f set user root #用户名 set host YouHostIP #主机IP set password YouPassword #密码 set timeout -1 spawn ssh $user@$host expect { &amp;quot;(yes/no)?</description>
    </item>
    
    <item>
      <title>Tradingview_pine脚本_三条ma</title>
      <link>https://hrbhot.github.io/posts/tradingview_pine%E8%84%9A%E6%9C%AC_%E4%B8%89%E6%9D%A1ma/</link>
      <pubDate>Thu, 30 Apr 2020 11:33:25 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/tradingview_pine%E8%84%9A%E6%9C%AC_%E4%B8%89%E6%9D%A1ma/</guid>
      <description>Tradingview 未付费用户有只能用三个指标的限制，如果我想看ma 20，60，120 就把资源都占用了。 利用pine编辑器6行代码节省资源，变成只占用一个指标。
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/ // © hrbhot //@version=4 study(title = &amp;quot;MA 20 &amp;amp; 60 &amp;amp; 120&amp;quot;, overlay = true) short = sma (close,20) //代表MA 20 mid = sma (close,60) //代表MA 60 long = sma (close,120) //代表MA 120 plot(short, color =#FF8C00, linewidth = 3) plot(mid, color =#FF4500, linewidth =3) plot(long, color =#C0C0C0, linewidth = 3)  把代码内 short,mid,long 换成自己需要的周期即可。</description>
    </item>
    
    <item>
      <title>给tar压缩增加进度条</title>
      <link>https://hrbhot.github.io/posts/%E7%BB%99tar%E5%8E%8B%E7%BC%A9%E5%A2%9E%E5%8A%A0%E8%BF%9B%E5%BA%A6%E6%9D%A1/</link>
      <pubDate>Tue, 28 Apr 2020 12:59:34 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/%E7%BB%99tar%E5%8E%8B%E7%BC%A9%E5%A2%9E%E5%8A%A0%E8%BF%9B%E5%BA%A6%E6%9D%A1/</guid>
      <description> 有点花里胡哨，在生产环境中还是建议使用 tar zcvf 这样简单的参数少的命令减少错误产生。
用pv 和du 显示进度条 需要先安装 pv工具，如ubuntu apt install pv 利用du先获得文件或目录大小，然后输出给 pv显示。
tar -cf - “要压缩的文件或者目录路径”| pv -s $(($(du -sk “要压缩的文件或者目录路径” | awk &#39;{print $1}&#39;) * 1024)) | gzip &amp;gt; {输出的文件名}.tar.gz  </description>
    </item>
    
    <item>
      <title>Ssh_sftp访问权限</title>
      <link>https://hrbhot.github.io/posts/ssh_sftp%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</link>
      <pubDate>Fri, 24 Apr 2020 21:45:13 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/ssh_sftp%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</guid>
      <description>限制用户连接sftp只能访问指定的目录
 新建用户,修改密码
useradd ftpuser passwd ftpuser  设置 ssh ，注意 /data/ftp的上级目录的权限是管理员。 如果设置 ChrootDirectory %h 则为用户主目录
cd /etc/ssh cp sshd_config{,.bak} vim sshd_config #编辑 #Subsystem sftp /usr/lib/openssh/sftp-server Subsystem sftp internal-sftp Match User ftpuser ChrootDirectory /data/ftp X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp  重启 测试
service sshd restart   补充  如果多用户 可以设置用户组 Group 如下
useradd -g sftp -d /data/ftp1 -s /sbin/nologin ftp1 #添加新用户组”sftp“和用户&amp;quot;ftp1&amp;quot; Match User user1 ChrootDirectory /data/ftp X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp Match Group sftp ChrootDirectory /data/ftp1 X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp  sftp访问的目录权限上至一直到顶级根目录 ，权限最大为755不可为777 否则出现错误 ”Connection reset by peer“</description>
    </item>
    
    <item>
      <title>Synology安装aria2</title>
      <link>https://hrbhot.github.io/posts/synology%E5%AE%89%E8%A3%85aria2/</link>
      <pubDate>Wed, 22 Apr 2020 20:56:49 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/synology%E5%AE%89%E8%A3%85aria2/</guid>
      <description>低端的synology没有docker功能真可惜，只能手动安装 aria2
安装 bootstrap 首先ssh 连上synology
wget http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/syno-mvkw-bootstrap_1.2-7_arm.xsh chmod +x syno-mvkw-bootstrap_1.2-7_arm.xsh sh syno-mvkw-bootstrap_1.2-7_arm.xsh 如果有报错 编辑 bootstrap.sh 找到 #if ! grep Feroceon-KW /proc/cpuinfo &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then # echo &amp;quot;Error: CPU not Marvell Kirkwood, probably wrong bootstrap.xsh&amp;quot; # exit 3 #fi 在这几行前面加上# 运行脚本 sh bootstrap.sh  安装 aria2 cd /opt/bin ./ipkg update ./ipkg install http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/aria2_1.14.2-1_arm.ipk 如果有报错，删除掉重新来 ./ipkg remove aria2  编辑 aria2.conf 配置文件 mkdir -p /opt/etc/aria2 &amp;amp;&amp;amp; cd /opt/etc/aria2  vim aria2.</description>
    </item>
    
    <item>
      <title>Elastic_stack_kibana_apache_nginx日志</title>
      <link>https://hrbhot.github.io/posts/elastic_stack_kibana_apache%E6%97%A5%E5%BF%97/</link>
      <pubDate>Fri, 17 Apr 2020 17:17:13 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/elastic_stack_kibana_apache%E6%97%A5%E5%BF%97/</guid>
      <description>配置 Elastic和kibana监控apache/nginx 日志
elastic 监控 apache 日志  elastic stack # 开源日志平台 由elasticsearch ,logstash，kibana，beats四个组件组成 kibana # 前端web展示日志分析和内容 kafka # 消息队列 filebeat # 将系统日志可视化，把数据发送给 logstash和elasticsearch logstash # 收集分析存储工具 elasticsearch # 搜索分析存储的数据,基于JSON分布式搜索  拉es镜像 docker pull elasticsearch:6.7.0  创建es配置文件和挂载目录 cd / mkdir -p mnt/elasticsearch cd mnt/elasticsearch mkdir config mkdir matser mkdir slave chmod 777 master chmod 777 slave  调高jvm线程 vim /etc/sysctl.conf # 添加这个 vm.max_map_count=262144 # 保存后执行这个命令 sysctl -p  matser.yml cluster.</description>
    </item>
    
  </channel>
</rss>