<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mémo de Yin </title>
    <link>https://hrbhot.github.io/</link>
    <description>Recent content on Mémo de Yin </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Tue, 28 Apr 2020 12:59:34 +0200</lastBuildDate>
    
	<atom:link href="https://hrbhot.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>给tar压缩增加进度条</title>
      <link>https://hrbhot.github.io/posts/%E7%BB%99tar%E5%8E%8B%E7%BC%A9%E5%A2%9E%E5%8A%A0%E8%BF%9B%E5%BA%A6%E6%9D%A1/</link>
      <pubDate>Tue, 28 Apr 2020 12:59:34 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/%E7%BB%99tar%E5%8E%8B%E7%BC%A9%E5%A2%9E%E5%8A%A0%E8%BF%9B%E5%BA%A6%E6%9D%A1/</guid>
      <description> 有点花里胡哨，在生产环境中还是建议使用 tar zxcf 这样简单的参数少的命令减少错误产生。
用pv 和du 显示进度条 需要先安装 pv工具，如ubuntu apt install pv 利用du先获得文件或目录大小，然后输出给 pv显示。
tar -cf - “要压缩的文件或者目录路径”| pv -s $(($(du -sk “要压缩的文件或者目录路径” | awk &#39;{print $1}&#39;) * 1024)) | gzip &amp;gt; {输出的文件名}.tar.gz  </description>
    </item>
    
    <item>
      <title>Ssh_sftp访问权限</title>
      <link>https://hrbhot.github.io/posts/ssh_sftp%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</link>
      <pubDate>Fri, 24 Apr 2020 21:45:13 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/ssh_sftp%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</guid>
      <description>限制用户连接sftp只能访问指定的目录
 新建用户,修改密码
useradd ftpuser passwd ftpuser  设置 ssh ，注意 /data/ftp的上级目录的权限是管理员。 如果设置 ChrootDirectory %h 则为用户主目录
cd /etc/ssh cp sshd_config{,.bak} vim sshd_config #编辑 #Subsystem sftp /usr/lib/openssh/sftp-server Subsystem sftp internal-sftp Match User ftpuser ChrootDirectory /data/ftp X11Forwarding no AllowTcpForwarding no ForceCommand internal-sftp  重启 测试
service sshd restart   </description>
    </item>
    
    <item>
      <title>Synology安装aria2</title>
      <link>https://hrbhot.github.io/posts/synology%E5%AE%89%E8%A3%85aria2/</link>
      <pubDate>Wed, 22 Apr 2020 20:56:49 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/synology%E5%AE%89%E8%A3%85aria2/</guid>
      <description>低端的synology没有docker功能真可惜，只能手动安装 aria2
安装 bootstrap 首先ssh 连上synology
wget http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/syno-mvkw-bootstrap_1.2-7_arm.xsh chmod +x syno-mvkw-bootstrap_1.2-7_arm.xsh sh syno-mvkw-bootstrap_1.2-7_arm.xsh 如果有报错 编辑 bootstrap.sh 找到 #if ! grep Feroceon-KW /proc/cpuinfo &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then # echo &amp;quot;Error: CPU not Marvell Kirkwood, probably wrong bootstrap.xsh&amp;quot; # exit 3 #fi 在这几行前面加上# 运行脚本 sh bootstrap.sh  安装 aria2 cd /opt/bin ./ipkg update ./ipkg install http://ipkg.nslu2-linux.org/feeds/optware/cs08q1armel/cross/unstable/aria2_1.14.2-1_arm.ipk 如果有报错，删除掉重新来 ./ipkg remove aria2  编辑 aria2.conf 配置文件 mkdir -p /opt/etc/aria2 &amp;amp;&amp;amp; cd /opt/etc/aria2  vim aria2.</description>
    </item>
    
    <item>
      <title>Elastic_stack_kibana_apache_nginx日志</title>
      <link>https://hrbhot.github.io/posts/elastic_stack_kibana_apache%E6%97%A5%E5%BF%97/</link>
      <pubDate>Fri, 17 Apr 2020 17:17:13 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/elastic_stack_kibana_apache%E6%97%A5%E5%BF%97/</guid>
      <description>配置 Elastic和kibana监控apache/nginx 日志
elastic 监控 apache 日志  elastic stack # 开源日志平台 由elasticsearch ,logstash，kibana，beats四个组件组成 kibana # 前端web展示日志分析和内容 kafka # 消息队列 filebeat # 将系统日志可视化，把数据发送给 logstash和elasticsearch logstash # 收集分析存储工具 elasticsearch # 搜索分析存储的数据,基于JSON分布式搜索  拉es镜像 docker pull elasticsearch:6.7.0  创建es配置文件和挂载目录 cd / mkdir -p mnt/elasticsearch cd mnt/elasticsearch mkdir config mkdir matser mkdir slave chmod 777 master chmod 777 slave  调高jvm线程 vim /etc/sysctl.conf # 添加这个 vm.max_map_count=262144 # 保存后执行这个命令 sysctl -p  matser.yml cluster.</description>
    </item>
    
    <item>
      <title>apache服务器的域名ssl配置</title>
      <link>https://hrbhot.github.io/posts/apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 17 Apr 2020 10:36:04 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</guid>
      <description>在/etc/apache2/apache2.conf 里面添加域名配置的路径方便管理，因为要配置多域名
# Vhost IncludeOptional conf.d/vhost/*.conf  在/etc/apache2/conf.d/vhost/ 目录下增加a1.conf ，a2.conf 代表a1网站和a2网站
 在/etc/apache2/ssl/a1 目录下放置 a1网站的ssl证书文件
  a1.conf的内容如下
&amp;lt;VirtualHost *:80&amp;gt; ServerName a1.com # a1的域名 ServerAlias www.a1.com ServerAdmin admin@gmail.com #管理员邮箱 DocumentRoot /data/web # 网站存放路径 &amp;lt;Directory /data/web&amp;gt; # 网站存放路径 DirectoryIndex index.php Options FollowSymLinks AllowOverride All Require all granted &amp;lt;/Directory&amp;gt; ErrorLog ${APACHE_LOG_DIR}/a1-error.log #错误日志路径 CustomLog ${APACHE_LOG_DIR}/a1-access.log combined #访问日志路径 # ssl配置部分 &amp;lt;/VirtualHost&amp;gt; &amp;lt;IfModule mod_ssl.c&amp;gt; &amp;lt;VirtualHost *:443&amp;gt; ServerAdmin admin@gmail.com ServerName a1.com ServerAlias www.a1.com DocumentRoot /data/web	#网站存放路径 &amp;lt;Directory /data/web/&amp;gt; #网站存放路径 DirectoryIndex index.</description>
    </item>
    
    <item>
      <title>使用tree命令排除某目录的方法 </title>
      <link>https://hrbhot.github.io/posts/tree%E6%8E%92%E9%99%A4%E6%9F%90%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sun, 12 Apr 2020 09:34:06 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/tree%E6%8E%92%E9%99%A4%E6%9F%90%E7%9B%AE%E5%BD%95/</guid>
      <description>当前路径有如下目录文件
Config Controllers Models Routes go.mod go.sum main.go pkg  排除pkg目录
tree -I &amp;quot;./pkg&amp;quot;  得到排除的tree结果
. ├── Config │ └── Database.go ├── Controllers │ └── Todo.go ├── Models │ ├── Model.go │ └── Todos.go ├── Routes │ └── Routes.go ├── go.mod ├── go.sum └── main.go  </description>
    </item>
    
    <item>
      <title>Ufw简单用法</title>
      <link>https://hrbhot.github.io/posts/ufw%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 11 Apr 2020 20:00:22 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/ufw%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/</guid>
      <description> ufw 简单用法 展示当前策略
ufw status  禁止9090端口
ufw deny 9090  允许9090端口
ufw allow 9090  删除某个规则 首先查看 规则序号
ufw status numbered  删除
ufw delete 序号  只允许指定IP地址访问指定端口
例如9090端口只允许10.0.2.1访问 来规避prometheus的数据被外部发现
ufw allow from 10.0.2.1 to any port 9090  </description>
    </item>
    
    <item>
      <title>Docker安装php extension imagemagick</title>
      <link>https://hrbhot.github.io/posts/docker%E5%AE%89%E8%A3%85php_extension_imagemagick/</link>
      <pubDate>Sat, 11 Apr 2020 18:37:48 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/docker%E5%AE%89%E8%A3%85php_extension_imagemagick/</guid>
      <description>进入docker内安装 apt-get update \ &amp;amp;&amp;amp; apt-get install -y libmagickwand-6.q16-dev --no-install-recommends \ &amp;amp;&amp;amp; yes&amp;quot;&amp;quot;|pecl install imagick \ &amp;amp;&amp;amp; echo &amp;quot;extension=imagick.so&amp;quot; &amp;gt; /usr/local/etc/php/conf.d/ext-imagick.ini  yes&amp;rdquo;&amp;rdquo; | 的意思是管道传递一个参数给后面的命令让pecl静默安装。
上面代码有待优化，上述安装让docker增加了差不多200M。</description>
    </item>
    
    <item>
      <title>解决docker内不能用php发邮件问题</title>
      <link>https://hrbhot.github.io/posts/%E8%A7%A3%E5%86%B3docker%E5%86%85%E4%B8%8D%E8%83%BD%E7%94%A8php%E5%8F%91%E9%82%AE%E4%BB%B6%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 11 Apr 2020 18:22:25 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/%E8%A7%A3%E5%86%B3docker%E5%86%85%E4%B8%8D%E8%83%BD%E7%94%A8php%E5%8F%91%E9%82%AE%E4%BB%B6%E9%97%AE%E9%A2%98/</guid>
      <description>用php mail发送邮件 ，docker 提示 cant connect to remote host (127.0.0.1): Connection refused。
问题来源于sendmail
解决办法 安装ssmtp 进入docker
apt-get install -q -y ssmtp mailutils / echo &amp;quot;mailhub=smtp.gmail.com:587&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf / echo &amp;quot;AuthUser=youMail@gmail.com&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf / echo &amp;quot;AuthPass=youPassword&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf / echo &amp;quot;UseTLS=YES&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf / echo &amp;quot;UseSTARTTLS=YES&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf / # 显示 发件人 echo &amp;quot;FromLineOverride=YES&amp;quot; &amp;gt;&amp;gt; /etc/ssmtp/ssmtp.conf #如果已经在php.ini里面设置了这步可以省却 echo &amp;quot;sendmail_path=sendmail -i -t&amp;quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/php-sendmail.ini  测试发送 下面2个方法都可以
 echo &amp;quot;Subject: Testing Email&amp;quot; | /usr/lib/sendmail -s youMail@gmail.</description>
    </item>
    
    <item>
      <title>Tar命令打包排除某个目录或者文件</title>
      <link>https://hrbhot.github.io/posts/tar%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85%E6%8E%92%E9%99%A4%E6%9F%90%E4%B8%AA%E7%9B%AE%E5%BD%95%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6/</link>
      <pubDate>Thu, 09 Apr 2020 17:25:29 +0200</pubDate>
      
      <guid>https://hrbhot.github.io/posts/tar%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85%E6%8E%92%E9%99%A4%E6%9F%90%E4%B8%AA%E7%9B%AE%E5%BD%95%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6/</guid>
      <description> 用tar 打包，并排除其中某个目录或者文件。
要打包test目录的结构 . ├── 1 │ ├── 1.txt │ └── 2.md ├── 2 │ └── 2.txt └── 3  打包排除目录1 tar zcvf test.tar.gz --eclude=test/1 test  打包排除目录1 和目录2 tar zcvf test.tar.gz --exclude=test/1 --exclude=test/2 test  打包排除目录1下面所有txt文件 tar zcvf test.tar.gz --exclude=test/1/*.txt test  </description>
    </item>
    
  </channel>
</rss>